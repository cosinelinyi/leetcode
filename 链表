
struct ListNode {
    int val;
    ListNode* next;
    ListNode() : val(0), next(nullptr) {}
    ListNode(int x) : val(x), next(nullptr) {}
    ListNode(int x, ListNode* next) : val(x), next(next) {}
};

//移除链表元素
class Solution {
public:
    ListNode* removeElements(ListNode* head, int val) {
        ListNode* pre_head = new ListNode(0, head);
        ListNode* pre = pre_head, * cur = head;
        while (cur != NULL) {
            if (cur->val == val) {
                cur = cur->next;
                pre->next = cur;
            }
            else {
                pre = pre->next;
                cur = cur->next;
            }
        }
        return pre_head->next;
    }
};

//翻转链表
class Solution {
public:
    ListNode* reverseList(ListNode* head) {
        ListNode* pre = NULL, * cur = head, * temp = NULL;
        while (cur != NULL) {
            temp = cur->next;
            cur->next = pre;
            pre = cur;
            cur = temp;
        }
        return pre;
    }
};
