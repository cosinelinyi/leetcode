#include <iostream>
#include <vector>

//二分查找
class Solution {
public:
    int search(std::vector<int>& nums, int target) {
        int left = 0, right = nums.size() - 1;
        while (left <= right) {
            int middle = (left + right) / 2;
            if (nums[middle] == target) {
                return middle;
            }
            else if (nums[middle] < target) {
                left = middle + 1;
            }
            else {
                right = middle - 1;
            }
        }
        return -1;
    }
};

int main() {
    std::vector<int> res = { 1,3,5,7,9,11,13,15 };
    Solution solution = Solution();
    int ret = solution.search(res, 15);
    std::cout << ret;
}

//移除元素
class Solution {
public:
    int removeElement(std::vector<int>& nums, int val) {
        int len = nums.size();
        for (int i = 0; i < len; i++) {
            if (nums[i] == val) {
                nums[i] = nums[len - 1];
                len--;
                i--;
            }
        }
        return len;
    }
};

int main() {
    std::vector<int> res = { 1,3,5,7,9,11,13,7 };
    Solution solution = Solution();
    int len = solution.removeElement(res, 7);
    std::cout << len;
}
